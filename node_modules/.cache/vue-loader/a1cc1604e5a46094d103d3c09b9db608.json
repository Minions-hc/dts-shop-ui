{"remainingRequest":"C:\\dts-shop\\admin-ui\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\dts-shop\\admin-ui\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\dts-shop\\admin-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\dts-shop\\admin-ui\\src\\views\\promotion\\topic.vue?vue&type=template&id=55fec019","dependencies":[{"path":"C:\\dts-shop\\admin-ui\\src\\views\\promotion\\topic.vue","mtime":1714111780000},{"path":"C:\\dts-shop\\admin-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1742308433329},{"path":"C:\\dts-shop\\admin-ui\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1742308445120},{"path":"C:\\dts-shop\\admin-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1742308433329},{"path":"C:\\dts-shop\\admin-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":1742308445120}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}