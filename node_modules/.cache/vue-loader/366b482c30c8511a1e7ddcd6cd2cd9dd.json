{"remainingRequest":"C:\\dts-shop\\admin-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\dts-shop\\admin-ui\\src\\components\\SizeSelect\\index.vue?vue&type=style&index=0&id=40bd2e60&scoped=true&lang=css","dependencies":[{"path":"C:\\dts-shop\\admin-ui\\src\\components\\SizeSelect\\index.vue","mtime":1714111780000},{"path":"C:\\dts-shop\\admin-ui\\node_modules\\css-loader\\dist\\cjs.js","mtime":1742308444894},{"path":"C:\\dts-shop\\admin-ui\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1742308445120},{"path":"C:\\dts-shop\\admin-ui\\node_modules\\@vue\\cli-service\\node_modules\\postcss-loader\\src\\index.js","mtime":1742308445087},{"path":"C:\\dts-shop\\admin-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1742308433329},{"path":"C:\\dts-shop\\admin-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":1742308445120}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLnNpemUtaWNvbiB7CiAgZm9udC1zaXplOiAyMHB4OwogIGN1cnNvcjogcG9pbnRlcjsKICB2ZXJ0aWNhbC1hbGlnbjogLTRweCFpbXBvcnRhbnQ7Cn0K"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgDA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/components/SizeSelect","sourcesContent":["<template>\n  <el-dropdown trigger=\"click\" @command=\"handleSetSize\">\n    <div>\n      <svg-icon class-name=\"size-icon\" icon-class=\"size\" />\n    </div>\n    <el-dropdown-menu slot=\"dropdown\">\n      <el-dropdown-item :disabled=\"size==='medium'\" command=\"medium\">Medium</el-dropdown-item>\n      <el-dropdown-item :disabled=\"size==='small'\" command=\"small\">Small</el-dropdown-item>\n      <el-dropdown-item :disabled=\"size==='mini'\" command=\"mini\">Mini</el-dropdown-item>\n    </el-dropdown-menu>\n  </el-dropdown>\n</template>\n\n<script>\nexport default {\n  computed: {\n    size() {\n      return this.$store.getters.size\n    }\n  },\n  methods: {\n    handleSetSize(size) {\n      this.$ELEMENT.size = size\n      this.$store.dispatch('setSize', size)\n      this.refreshView()\n      this.$message({\n        message: 'Switch Size Success',\n        type: 'success'\n      })\n    },\n    refreshView() {\n      // In order to make the cached page re-rendered\n      this.$store.dispatch('delAllCachedViews', this.$route)\n\n      const { fullPath } = this.$route\n\n      this.$nextTick(() => {\n        this.$router.replace({\n          path: '/redirect' + fullPath\n        })\n      })\n    }\n  }\n\n}\n</script>\n\n<style scoped>\n.size-icon {\n  font-size: 20px;\n  cursor: pointer;\n  vertical-align: -4px!important;\n}\n</style>\n\n"]}]}