{"remainingRequest":"C:\\dts-shop\\admin-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\dts-shop\\admin-ui\\src\\views\\sys\\role.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\dts-shop\\admin-ui\\src\\views\\sys\\role.vue","mtime":1714111780000},{"path":"C:\\dts-shop\\admin-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1742308433329},{"path":"C:\\dts-shop\\admin-ui\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":1742308433476},{"path":"C:\\dts-shop\\admin-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1742308433329},{"path":"C:\\dts-shop\\admin-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":1742308445120}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IGxpc3RSb2xlLCBjcmVhdGVSb2xlLCB1cGRhdGVSb2xlLCBkZWxldGVSb2xlLCBnZXRQZXJtaXNzaW9uLCB1cGRhdGVQZXJtaXNzaW9uIH0gZnJvbSAnQC9hcGkvYnVzaW5lc3Mvcm9sZScKaW1wb3J0IFBhZ2luYXRpb24gZnJvbSAnQC9jb21wb25lbnRzL1BhZ2luYXRpb24nCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnUm9sZScsCiAgY29tcG9uZW50czogeyBQYWdpbmF0aW9uIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGxpc3Q6IG51bGwsCiAgICAgIHRvdGFsOiAwLAogICAgICBsaXN0TG9hZGluZzogdHJ1ZSwKICAgICAgbGlzdFF1ZXJ5OiB7CiAgICAgICAgcGFnZTogMSwKICAgICAgICBsaW1pdDogMjAsCiAgICAgICAgbmFtZTogdW5kZWZpbmVkLAogICAgICAgIHNvcnQ6ICdhZGRfdGltZScsCiAgICAgICAgb3JkZXI6ICdkZXNjJwogICAgICB9LAogICAgICBkYXRhRm9ybTogewogICAgICAgIGlkOiB1bmRlZmluZWQsCiAgICAgICAgbmFtZTogdW5kZWZpbmVkLAogICAgICAgIGRlc2M6IHVuZGVmaW5lZAogICAgICB9LAogICAgICBkaWFsb2dGb3JtVmlzaWJsZTogZmFsc2UsCiAgICAgIGRpYWxvZ1N0YXR1czogJycsCiAgICAgIHRleHRNYXA6IHsKICAgICAgICB1cGRhdGU6ICfnvJbovpEnLAogICAgICAgIGNyZWF0ZTogJ+WIm+W7uicKICAgICAgfSwKICAgICAgcnVsZXM6IHsKICAgICAgICBuYW1lOiBbCiAgICAgICAgICB7IHJlcXVpcmVkOiB0cnVlLCBtZXNzYWdlOiAn6KeS6Imy5ZCN56ew5LiN6IO95Li656m6JywgdHJpZ2dlcjogJ2JsdXInIH0KICAgICAgICBdCiAgICAgIH0sCiAgICAgIHBlcm1pc3Npb25EaWFsb2dGb3JtVmlzaWJsZTogZmFsc2UsCiAgICAgIHN5c3RlbVBlcm1pc3Npb25zOiBudWxsLAogICAgICBhc3NpZ25lZFBlcm1pc3Npb25zOiBudWxsLAogICAgICBwZXJtaXNzaW9uRm9ybTogewogICAgICAgIHJvbGVJZDogdW5kZWZpbmVkLAogICAgICAgIHBlcm1pc3Npb25zOiBbXQogICAgICB9CiAgICB9CiAgfSwKICBjcmVhdGVkKCkgewogICAgdGhpcy5nZXRMaXN0KCkKICB9LAogIG1ldGhvZHM6IHsKICAgIGdldExpc3QoKSB7CiAgICAgIHRoaXMubGlzdExvYWRpbmcgPSB0cnVlCiAgICAgIGxpc3RSb2xlKHRoaXMubGlzdFF1ZXJ5KQogICAgICAgIC50aGVuKHJlc3BvbnNlID0+IHsKICAgICAgICAgIHRoaXMubGlzdCA9IHJlc3BvbnNlLmRhdGEuZGF0YS5pdGVtcwogICAgICAgICAgdGhpcy50b3RhbCA9IHJlc3BvbnNlLmRhdGEuZGF0YS50b3RhbAogICAgICAgICAgdGhpcy5saXN0TG9hZGluZyA9IGZhbHNlCiAgICAgICAgfSkKICAgICAgICAuY2F0Y2goKCkgPT4gewogICAgICAgICAgdGhpcy5saXN0ID0gW10KICAgICAgICAgIHRoaXMudG90YWwgPSAwCiAgICAgICAgICB0aGlzLmxpc3RMb2FkaW5nID0gZmFsc2UKICAgICAgICB9KQogICAgfSwKICAgIGhhbmRsZUZpbHRlcigpIHsKICAgICAgdGhpcy5saXN0UXVlcnkucGFnZSA9IDEKICAgICAgdGhpcy5nZXRMaXN0KCkKICAgIH0sCiAgICByZXNldEZvcm0oKSB7CiAgICAgIHRoaXMuZGF0YUZvcm0gPSB7CiAgICAgICAgaWQ6IHVuZGVmaW5lZCwKICAgICAgICBuYW1lOiB1bmRlZmluZWQsCiAgICAgICAgZGVzYzogdW5kZWZpbmVkCiAgICAgIH0KICAgIH0sCiAgICBoYW5kbGVDcmVhdGUoKSB7CiAgICAgIHRoaXMucmVzZXRGb3JtKCkKICAgICAgdGhpcy5kaWFsb2dTdGF0dXMgPSAnY3JlYXRlJwogICAgICB0aGlzLmRpYWxvZ0Zvcm1WaXNpYmxlID0gdHJ1ZQogICAgICB0aGlzLiRuZXh0VGljaygoKSA9PiB7CiAgICAgICAgdGhpcy4kcmVmc1snZGF0YUZvcm0nXS5jbGVhclZhbGlkYXRlKCkKICAgICAgfSkKICAgIH0sCiAgICBjcmVhdGVEYXRhKCkgewogICAgICB0aGlzLiRyZWZzWydkYXRhRm9ybSddLnZhbGlkYXRlKHZhbGlkID0+IHsKICAgICAgICBpZiAodmFsaWQpIHsKICAgICAgICAgIGNyZWF0ZVJvbGUodGhpcy5kYXRhRm9ybSkKICAgICAgICAgICAgLnRoZW4ocmVzcG9uc2UgPT4gewogICAgICAgICAgICAgIHRoaXMubGlzdC51bnNoaWZ0KHJlc3BvbnNlLmRhdGEuZGF0YSkKICAgICAgICAgICAgICB0aGlzLmRpYWxvZ0Zvcm1WaXNpYmxlID0gZmFsc2UKICAgICAgICAgICAgICB0aGlzLiRub3RpZnkuc3VjY2Vzcyh7CiAgICAgICAgICAgICAgICB0aXRsZTogJ+aIkOWKnycsCiAgICAgICAgICAgICAgICBtZXNzYWdlOiAn5re75Yqg6KeS6Imy5oiQ5YqfJwogICAgICAgICAgICAgIH0pCiAgICAgICAgICAgIH0pCiAgICAgICAgICAgIC5jYXRjaChyZXNwb25zZSA9PiB7CiAgICAgICAgICAgICAgdGhpcy4kbm90aWZ5LmVycm9yKHsKICAgICAgICAgICAgICAgIHRpdGxlOiAn5aSx6LSlJywKICAgICAgICAgICAgICAgIG1lc3NhZ2U6IHJlc3BvbnNlLmRhdGEuZXJybXNnCiAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgfSkKICAgICAgICB9CiAgICAgIH0pCiAgICB9LAogICAgaGFuZGxlVXBkYXRlKHJvdykgewogICAgICB0aGlzLmRhdGFGb3JtID0gT2JqZWN0LmFzc2lnbih7fSwgcm93KQogICAgICB0aGlzLmRpYWxvZ1N0YXR1cyA9ICd1cGRhdGUnCiAgICAgIHRoaXMuZGlhbG9nRm9ybVZpc2libGUgPSB0cnVlCiAgICAgIHRoaXMuJG5leHRUaWNrKCgpID0+IHsKICAgICAgICB0aGlzLiRyZWZzWydkYXRhRm9ybSddLmNsZWFyVmFsaWRhdGUoKQogICAgICB9KQogICAgfSwKICAgIHVwZGF0ZURhdGEoKSB7CiAgICAgIHRoaXMuJHJlZnNbJ2RhdGFGb3JtJ10udmFsaWRhdGUodmFsaWQgPT4gewogICAgICAgIGlmICh2YWxpZCkgewogICAgICAgICAgdXBkYXRlUm9sZSh0aGlzLmRhdGFGb3JtKQogICAgICAgICAgICAudGhlbigoKSA9PiB7CiAgICAgICAgICAgICAgZm9yIChjb25zdCB2IG9mIHRoaXMubGlzdCkgewogICAgICAgICAgICAgICAgaWYgKHYuaWQgPT09IHRoaXMuZGF0YUZvcm0uaWQpIHsKICAgICAgICAgICAgICAgICAgY29uc3QgaW5kZXggPSB0aGlzLmxpc3QuaW5kZXhPZih2KQogICAgICAgICAgICAgICAgICB0aGlzLmxpc3Quc3BsaWNlKGluZGV4LCAxLCB0aGlzLmRhdGFGb3JtKQogICAgICAgICAgICAgICAgICBicmVhawogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB0aGlzLmRpYWxvZ0Zvcm1WaXNpYmxlID0gZmFsc2UKICAgICAgICAgICAgICB0aGlzLiRub3RpZnkuc3VjY2Vzcyh7CiAgICAgICAgICAgICAgICB0aXRsZTogJ+aIkOWKnycsCiAgICAgICAgICAgICAgICBtZXNzYWdlOiAn5pu05paw566h55CG5ZGY5oiQ5YqfJwogICAgICAgICAgICAgIH0pCiAgICAgICAgICAgIH0pCiAgICAgICAgICAgIC5jYXRjaChyZXNwb25zZSA9PiB7CiAgICAgICAgICAgICAgdGhpcy4kbm90aWZ5LmVycm9yKHsKICAgICAgICAgICAgICAgIHRpdGxlOiAn5aSx6LSlJywKICAgICAgICAgICAgICAgIG1lc3NhZ2U6IHJlc3BvbnNlLmRhdGEuZXJybXNnCiAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgfSkKICAgICAgICB9CiAgICAgIH0pCiAgICB9LAogICAgaGFuZGxlRGVsZXRlKHJvdykgewogICAgICBkZWxldGVSb2xlKHJvdykKICAgICAgICAudGhlbihyZXNwb25zZSA9PiB7CiAgICAgICAgICB0aGlzLiRub3RpZnkuc3VjY2Vzcyh7CiAgICAgICAgICAgIHRpdGxlOiAn5oiQ5YqfJywKICAgICAgICAgICAgbWVzc2FnZTogJ+WIoOmZpOeuoeeQhuWRmOaIkOWKnycKICAgICAgICAgIH0pCiAgICAgICAgICBjb25zdCBpbmRleCA9IHRoaXMubGlzdC5pbmRleE9mKHJvdykKICAgICAgICAgIHRoaXMubGlzdC5zcGxpY2UoaW5kZXgsIDEpCiAgICAgICAgfSkKICAgICAgICAuY2F0Y2gocmVzcG9uc2UgPT4gewogICAgICAgICAgdGhpcy4kbm90aWZ5LmVycm9yKHsKICAgICAgICAgICAgdGl0bGU6ICflpLHotKUnLAogICAgICAgICAgICBtZXNzYWdlOiByZXNwb25zZS5kYXRhLmVycm1zZwogICAgICAgICAgfSkKICAgICAgICB9KQogICAgfSwKICAgIGhhbmRsZVBlcm1pc3Npb24ocm93KSB7CiAgICAgIHRoaXMucGVybWlzc2lvbkRpYWxvZ0Zvcm1WaXNpYmxlID0gdHJ1ZQogICAgICB0aGlzLnBlcm1pc3Npb25Gb3JtLnJvbGVJZCA9IHJvdy5pZAogICAgICBnZXRQZXJtaXNzaW9uKHsgcm9sZUlkOiByb3cuaWQgfSkKICAgICAgICAudGhlbihyZXNwb25zZSA9PiB7CiAgICAgICAgICB0aGlzLnN5c3RlbVBlcm1pc3Npb25zID0gcmVzcG9uc2UuZGF0YS5kYXRhLnN5c3RlbVBlcm1pc3Npb25zCiAgICAgICAgICB0aGlzLmFzc2lnbmVkUGVybWlzc2lvbnMgPSByZXNwb25zZS5kYXRhLmRhdGEuYXNzaWduZWRQZXJtaXNzaW9ucwogICAgICAgIH0pCiAgICB9LAogICAgdXBkYXRlUGVybWlzc2lvbigpIHsKICAgICAgdGhpcy5wZXJtaXNzaW9uRm9ybS5wZXJtaXNzaW9ucyA9IHRoaXMuJHJlZnMudHJlZS5nZXRDaGVja2VkS2V5cyh0cnVlKQogICAgICB1cGRhdGVQZXJtaXNzaW9uKHRoaXMucGVybWlzc2lvbkZvcm0pCiAgICAgICAgLnRoZW4ocmVzcG9uc2UgPT4gewogICAgICAgICAgdGhpcy5wZXJtaXNzaW9uRGlhbG9nRm9ybVZpc2libGUgPSBmYWxzZQogICAgICAgICAgdGhpcy4kbm90aWZ5LnN1Y2Nlc3MoewogICAgICAgICAgICB0aXRsZTogJ+aIkOWKnycsCiAgICAgICAgICAgIG1lc3NhZ2U6ICfmjojmnYPmiJDlip8nCiAgICAgICAgICB9KQogICAgICAgIH0pCiAgICAgICAgLmNhdGNoKHJlc3BvbnNlID0+IHsKICAgICAgICAgIHRoaXMuJG5vdGlmeS5lcnJvcih7CiAgICAgICAgICAgIHRpdGxlOiAn5aSx6LSlJywKICAgICAgICAgICAgbWVzc2FnZTogcmVzcG9uc2UuZGF0YS5lcnJtc2cKICAgICAgICAgIH0pCiAgICAgICAgfSkKICAgIH0KICB9Cn0K"},{"version":3,"sources":["role.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"role.vue","sourceRoot":"src/views/sys","sourcesContent":["<template>\n  <div class=\"app-container\">\n\n    <!-- 查询和其他操作 -->\n    <div class=\"filter-container\">\n      <el-input v-model=\"listQuery.rolename\" clearable size=\"mini\" class=\"filter-item\" style=\"width: 200px;\" placeholder=\"请输入角色名称\"/>\n      <el-button v-permission=\"['GET /admin/role/list']\" size=\"mini\" class=\"filter-item\" type=\"primary\" icon=\"el-icon-search\" @click=\"handleFilter\">查找</el-button>\n      <el-button v-permission=\"['POST /admin/role/create']\" size=\"mini\" class=\"filter-item\" type=\"primary\" icon=\"el-icon-edit\" @click=\"handleCreate\">添加</el-button>\n    </div>\n\n    <!-- 查询结果 -->\n    <el-table v-loading=\"listLoading\" :data=\"list\" size=\"small\" element-loading-text=\"正在查询中。。。\" border fit highlight-current-row>\n      <el-table-column align=\"center\" label=\"角色名称\" prop=\"name\" sortable/>\n\n      <el-table-column align=\"center\" label=\"说明\" prop=\"desc\"/>\n\n      <el-table-column align=\"center\" label=\"操作\" class-name=\"small-padding fixed-width\">\n        <template slot-scope=\"scope\">\n          <el-button v-permission=\"['POST /admin/role/update']\" type=\"primary\" size=\"mini\" @click=\"handleUpdate(scope.row)\">编辑</el-button>\n          <el-button v-permission=\"['POST /admin/role/delete']\" type=\"danger\" size=\"mini\" @click=\"handleDelete(scope.row)\">删除</el-button>\n          <el-button v-permission=\"['GET /admin/role/permissions']\" type=\"primary\" size=\"mini\" @click=\"handlePermission(scope.row)\">授权</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <pagination v-show=\"total>0\" :total=\"total\" :page.sync=\"listQuery.page\" :limit.sync=\"listQuery.limit\" @pagination=\"getList\" />\n\n    <!-- 添加或修改对话框 -->\n    <el-dialog :title=\"textMap[dialogStatus]\" :visible.sync=\"dialogFormVisible\">\n      <el-form ref=\"dataForm\" :rules=\"rules\" :model=\"dataForm\" status-icon label-position=\"left\" label-width=\"100px\" style=\"width: 400px; margin-left:50px;\">\n        <el-form-item label=\"角色名称\" prop=\"name\">\n          <el-input v-model=\"dataForm.name\"/>\n        </el-form-item>\n        <el-form-item label=\"说明\" prop=\"desc\">\n          <el-input v-model=\"dataForm.desc\"/>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"dialogFormVisible = false\">取消</el-button>\n        <el-button v-if=\"dialogStatus=='create'\" type=\"primary\" @click=\"createData\">确定</el-button>\n        <el-button v-else type=\"primary\" @click=\"updateData\">确定</el-button>\n      </div>\n    </el-dialog>\n\n    <!-- 权限配置对话框 -->\n    <el-dialog :visible.sync=\"permissionDialogFormVisible\" title=\"权限配置\">\n      <el-tree\n        ref=\"tree\"\n        :data=\"systemPermissions\"\n        :default-checked-keys=\"assignedPermissions\"\n        show-checkbox\n        node-key=\"id\"\n        highlight-current>\n        <span slot-scope=\"{ node, data }\" class=\"custom-tree-node\">\n          <span>{{ data.label }}</span>\n          <el-tag v-if=\"data.api\" type=\"success\" size=\"mini\">{{ data.api }}</el-tag>\n        </span>\n      </el-tree>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"permissionDialogFormVisible = false\">取消</el-button>\n        <el-button type=\"primary\" @click=\"updatePermission\">确定</el-button>\n      </div>\n    </el-dialog>\n\n  </div>\n</template>\n\n<script>\nimport { listRole, createRole, updateRole, deleteRole, getPermission, updatePermission } from '@/api/business/role'\nimport Pagination from '@/components/Pagination'\nexport default {\n  name: 'Role',\n  components: { Pagination },\n  data() {\n    return {\n      list: null,\n      total: 0,\n      listLoading: true,\n      listQuery: {\n        page: 1,\n        limit: 20,\n        name: undefined,\n        sort: 'add_time',\n        order: 'desc'\n      },\n      dataForm: {\n        id: undefined,\n        name: undefined,\n        desc: undefined\n      },\n      dialogFormVisible: false,\n      dialogStatus: '',\n      textMap: {\n        update: '编辑',\n        create: '创建'\n      },\n      rules: {\n        name: [\n          { required: true, message: '角色名称不能为空', trigger: 'blur' }\n        ]\n      },\n      permissionDialogFormVisible: false,\n      systemPermissions: null,\n      assignedPermissions: null,\n      permissionForm: {\n        roleId: undefined,\n        permissions: []\n      }\n    }\n  },\n  created() {\n    this.getList()\n  },\n  methods: {\n    getList() {\n      this.listLoading = true\n      listRole(this.listQuery)\n        .then(response => {\n          this.list = response.data.data.items\n          this.total = response.data.data.total\n          this.listLoading = false\n        })\n        .catch(() => {\n          this.list = []\n          this.total = 0\n          this.listLoading = false\n        })\n    },\n    handleFilter() {\n      this.listQuery.page = 1\n      this.getList()\n    },\n    resetForm() {\n      this.dataForm = {\n        id: undefined,\n        name: undefined,\n        desc: undefined\n      }\n    },\n    handleCreate() {\n      this.resetForm()\n      this.dialogStatus = 'create'\n      this.dialogFormVisible = true\n      this.$nextTick(() => {\n        this.$refs['dataForm'].clearValidate()\n      })\n    },\n    createData() {\n      this.$refs['dataForm'].validate(valid => {\n        if (valid) {\n          createRole(this.dataForm)\n            .then(response => {\n              this.list.unshift(response.data.data)\n              this.dialogFormVisible = false\n              this.$notify.success({\n                title: '成功',\n                message: '添加角色成功'\n              })\n            })\n            .catch(response => {\n              this.$notify.error({\n                title: '失败',\n                message: response.data.errmsg\n              })\n            })\n        }\n      })\n    },\n    handleUpdate(row) {\n      this.dataForm = Object.assign({}, row)\n      this.dialogStatus = 'update'\n      this.dialogFormVisible = true\n      this.$nextTick(() => {\n        this.$refs['dataForm'].clearValidate()\n      })\n    },\n    updateData() {\n      this.$refs['dataForm'].validate(valid => {\n        if (valid) {\n          updateRole(this.dataForm)\n            .then(() => {\n              for (const v of this.list) {\n                if (v.id === this.dataForm.id) {\n                  const index = this.list.indexOf(v)\n                  this.list.splice(index, 1, this.dataForm)\n                  break\n                }\n              }\n              this.dialogFormVisible = false\n              this.$notify.success({\n                title: '成功',\n                message: '更新管理员成功'\n              })\n            })\n            .catch(response => {\n              this.$notify.error({\n                title: '失败',\n                message: response.data.errmsg\n              })\n            })\n        }\n      })\n    },\n    handleDelete(row) {\n      deleteRole(row)\n        .then(response => {\n          this.$notify.success({\n            title: '成功',\n            message: '删除管理员成功'\n          })\n          const index = this.list.indexOf(row)\n          this.list.splice(index, 1)\n        })\n        .catch(response => {\n          this.$notify.error({\n            title: '失败',\n            message: response.data.errmsg\n          })\n        })\n    },\n    handlePermission(row) {\n      this.permissionDialogFormVisible = true\n      this.permissionForm.roleId = row.id\n      getPermission({ roleId: row.id })\n        .then(response => {\n          this.systemPermissions = response.data.data.systemPermissions\n          this.assignedPermissions = response.data.data.assignedPermissions\n        })\n    },\n    updatePermission() {\n      this.permissionForm.permissions = this.$refs.tree.getCheckedKeys(true)\n      updatePermission(this.permissionForm)\n        .then(response => {\n          this.permissionDialogFormVisible = false\n          this.$notify.success({\n            title: '成功',\n            message: '授权成功'\n          })\n        })\n        .catch(response => {\n          this.$notify.error({\n            title: '失败',\n            message: response.data.errmsg\n          })\n        })\n    }\n  }\n}\n</script>\n"]}]}